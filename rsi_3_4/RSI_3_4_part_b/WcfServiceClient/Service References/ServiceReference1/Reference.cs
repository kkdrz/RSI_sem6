//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexNumber", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceContractWithDataContract")]
    [System.SerializableAttribute()]
    public partial class ComplexNumber : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ImaginaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RealField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Imaginary {
            get {
                return this.ImaginaryField;
            }
            set {
                if ((this.ImaginaryField.Equals(value) != true)) {
                    this.ImaginaryField = value;
                    this.RaisePropertyChanged("Imaginary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Real {
            get {
                return this.RealField;
            }
            set {
                if ((this.RealField.Equals(value) != true)) {
                    this.RealField = value;
                    this.RaisePropertyChanged("Real");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RandomSpecification", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceContractWithDataContract")]
    [System.SerializableAttribute()]
    public partial class RandomSpecification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] IntNumbersArrayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] IntNumbersArray {
            get {
                return this.IntNumbersArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.IntNumbersArrayField, value) != true)) {
                    this.IntNumbersArrayField = value;
                    this.RaisePropertyChanged("IntNumbersArray");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RandomResult", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceContractWithDataContract")]
    [System.SerializableAttribute()]
    public partial class RandomResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IComplexCalculator")]
    public interface IComplexCalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/AddComplex", ReplyAction="http://tempuri.org/IComplexCalculator/AddComplexResponse")]
        WcfServiceClient.ServiceReference1.ComplexNumber AddComplex(WcfServiceClient.ServiceReference1.ComplexNumber first, WcfServiceClient.ServiceReference1.ComplexNumber second);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/AddComplex", ReplyAction="http://tempuri.org/IComplexCalculator/AddComplexResponse")]
        System.Threading.Tasks.Task<WcfServiceClient.ServiceReference1.ComplexNumber> AddComplexAsync(WcfServiceClient.ServiceReference1.ComplexNumber first, WcfServiceClient.ServiceReference1.ComplexNumber second);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/Random", ReplyAction="http://tempuri.org/IComplexCalculator/RandomResponse")]
        WcfServiceClient.ServiceReference1.RandomResult Random(WcfServiceClient.ServiceReference1.RandomSpecification specification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComplexCalculator/Random", ReplyAction="http://tempuri.org/IComplexCalculator/RandomResponse")]
        System.Threading.Tasks.Task<WcfServiceClient.ServiceReference1.RandomResult> RandomAsync(WcfServiceClient.ServiceReference1.RandomSpecification specification);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IComplexCalculatorChannel : WcfServiceClient.ServiceReference1.IComplexCalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComplexCalculatorClient : System.ServiceModel.ClientBase<WcfServiceClient.ServiceReference1.IComplexCalculator>, WcfServiceClient.ServiceReference1.IComplexCalculator {
        
        public ComplexCalculatorClient() {
        }
        
        public ComplexCalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComplexCalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComplexCalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComplexCalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfServiceClient.ServiceReference1.ComplexNumber AddComplex(WcfServiceClient.ServiceReference1.ComplexNumber first, WcfServiceClient.ServiceReference1.ComplexNumber second) {
            return base.Channel.AddComplex(first, second);
        }
        
        public System.Threading.Tasks.Task<WcfServiceClient.ServiceReference1.ComplexNumber> AddComplexAsync(WcfServiceClient.ServiceReference1.ComplexNumber first, WcfServiceClient.ServiceReference1.ComplexNumber second) {
            return base.Channel.AddComplexAsync(first, second);
        }
        
        public WcfServiceClient.ServiceReference1.RandomResult Random(WcfServiceClient.ServiceReference1.RandomSpecification specification) {
            return base.Channel.Random(specification);
        }
        
        public System.Threading.Tasks.Task<WcfServiceClient.ServiceReference1.RandomResult> RandomAsync(WcfServiceClient.ServiceReference1.RandomSpecification specification) {
            return base.Channel.RandomAsync(specification);
        }
    }
}
